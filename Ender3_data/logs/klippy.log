===== Config file =====
[virtual_sdcard]
path = /home/secretjameser/Ender3_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set allow_park = client.park_at_cancel | default(false) | lower == 'true' %}
	{% set retract = client.cancel_retract | default(5.0) | abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x | default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y | default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x | length > 0 or park_y | length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro | default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set idle_timeout = client.idle_timeout | default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE | default(1) | int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro | default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move | default(velocity) %}
	{% set runout_resume = True if client.runout_sensor | default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state | upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro | default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY | default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1)|int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER | int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos | default(false) | lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x | default(0.0) %}
	{% set custom_park_y  = client.custom_park_y | default(0.0) %}
	{% set park_dz        = client.custom_park_dz | default(2.0) | abs %}
	{% set sp_hop         = client.speed_hop | default(15) * 60 %}
	{% set sp_move        = client.speed_move | default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z | default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN | default(0) | float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)] | min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set use_fw_retract = (client.use_fw_retract | default(false) | lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH | default(client.unretract) | default(1.0) | float %}
	{% set speed = params.SPEED | default(client.speed_unretract) | default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed | float | abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set length = params.LENGTH | default(client.retract) | default(1.0) | float %}
	{% set speed = params.SPEED | default(client.speed_retract) | default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length | float | abs} SPEED={speed | float | abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(50)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE ADAPTIVE=1
	
	SMART_PARK
	
	M109 S{EXTRUDER_TEMP}
	
	M190 S{BED_TEMP}
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-10 F300
	
	G1 Z10 F3000
	G90
	
	M84

[output_pin BEEPER_pin]
pin = PC6
pwm = True
value = 0
shutdown_value = 0
cycle_time = 0.001

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Presmartpark_State
	
	G90
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}
	
	RESTORE_GCODE_STATE NAME=Presmartpark_State

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 10
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10

[extruder]
max_extrude_only_distance = 100.0
max_extrude_cross_section = 5
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 34.406
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
control = pid
pid_kp = 21.527
pid_ki = 1.063
pid_kd = 108.982
min_temp = 0
max_temp = 250

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 54.027
pid_ki = 0.770
pid_kd = 948.182
min_temp = 0
max_temp = 130

[bed_mesh]
mesh_min = 20, 20
mesh_max = 190, 215
probe_count = 10, 10
algorithm = bicubic

[safe_z_home]
home_xy_position = 162.5, 121.5
z_hop = 5

[gcode_arcs]
resolution = 0.2

[input_shaper]
shaper_freq_x = 40
shaper_freq_y = 40
shaper_type = mzv

[screws_tilt_adjust]
screw1 = 76.7, 35.7
screw1_name = Front_Left
screw2 = 235, 35.7
screw2_name = Front_Right
screw3 = 76.7, 207.3
screw3_name = Back_left
screw4 = 235, 207.3
screw4_name = Back_Right
screw_thread = CW-M3

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 150
max_accel = 1500
max_z_velocity = 2.5
max_z_accel = 50

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
x_offset = -45
y_offset = -4
z_offset = 1.275

[display]
lcd_type = st7920
cs_pin = PB12
sclk_pin = PB13
sid_pin = PB15
encoder_pins = ^PB14, ^PB10
click_pin = ^!PB2

[bed_mesh default]
version = 1
points = 
	-0.060000, -0.077500, -0.082500, -0.057500, -0.040000, -0.037500, -0.050000, 0.002500, 0.017500, 0.050000
	-0.110000, -0.122500, -0.100000, -0.070000, -0.032500, -0.035000, -0.027500, 0.030000, 0.060000, 0.092500
	-0.077500, -0.090000, -0.077500, -0.035000, -0.002500, 0.007500, 0.005000, 0.065000, 0.100000, 0.132500
	-0.060000, -0.060000, -0.055000, -0.022500, -0.005000, -0.007500, -0.010000, 0.035000, 0.075000, 0.117500
	-0.100000, -0.110000, -0.087500, -0.055000, -0.022500, -0.017500, 0.002500, 0.067500, 0.122500, 0.130000
	-0.102500, -0.102500, -0.085000, -0.057500, -0.022500, -0.015000, 0.005000, 0.070000, 0.107500, 0.157500
	-0.035000, -0.067500, -0.060000, -0.035000, -0.010000, -0.017500, 0.002500, 0.072500, 0.127500, 0.122500
	0.000000, -0.037500, -0.050000, -0.035000, -0.020000, -0.045000, -0.040000, 0.015000, 0.055000, 0.072500
	0.005000, -0.025000, -0.057500, -0.040000, -0.027500, -0.025000, -0.012500, 0.057500, 0.125000, 0.125000
	0.052500, 0.012500, -0.022500, -0.035000, -0.020000, -0.032500, -0.045000, 0.017500, 0.050000, 0.085000
x_count = 10
y_count = 10
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 189.92
min_y = 20.0
max_y = 214.93999999999997
=======================
Args: ['/home/secretjameser/klipper/klippy/klippy.py', '/home/secretjameser/Ender3_data/config/printer.cfg', '-I', '/home/secretjameser/Ender3_data/comms/klippy.serial', '-l', '/home/secretjameser/Ender3_data/logs/klippy.log', '-a', '/home/secretjameser/Ender3_data/comms/klippy.sock']
Git version: 'v0.12.0-377-g9bd0d4757'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core Intel(R) Core(TM) i5 CPU       M 460  @ 2.53GHz
Python: '3.11.2 (main, Nov 30 2024, 21:22:50) [GCC 12.2.0]'
=============== Log rollover at Sun Jan 19 19:20:24 2025 ===============
webhooks client 140563005244240: Disconnected
Restarting printer
Start printer at Sun Jan 19 19:20:25 2025 (1737332425.8 10747.1)
===== Config file =====
[virtual_sdcard]
path = /home/secretjameser/Ender3_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set allow_park = client.park_at_cancel | default(false) | lower == 'true' %}
	{% set retract = client.cancel_retract | default(5.0) | abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x | default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y | default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x | length > 0 or park_y | length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro | default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set idle_timeout = client.idle_timeout | default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE | default(1) | int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro | default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move | default(velocity) %}
	{% set runout_resume = True if client.runout_sensor | default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	{% set prompt_txt = [] %}
	
	
	{% if printer.idle_timeout.state | upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro | default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY | default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
	{% endif %}
	
	{% if not (runout_resume and do_resume) %}
	RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
	{% for element in prompt_txt %}
	RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}'
	{% endfor %}
	RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
	RESPOND TYPE=command MSG="action:prompt_show"
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1)|int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER | int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos | default(false) | lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x | default(0.0) %}
	{% set custom_park_y  = client.custom_park_y | default(0.0) %}
	{% set park_dz        = client.custom_park_dz | default(2.0) | abs %}
	{% set sp_hop         = client.speed_hop | default(15) * 60 %}
	{% set sp_move        = client.speed_move | default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z | default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN | default(0) | float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)] | min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set use_fw_retract = (client.use_fw_retract | default(false) | lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH | default(client.unretract) | default(1.0) | float %}
	{% set speed = params.SPEED | default(client.speed_unretract) | default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed | float | abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
	{% set length = params.LENGTH | default(client.retract) | default(1.0) | float %}
	{% set speed = params.SPEED | default(client.speed_retract) | default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length | float | abs} SPEED={speed | float | abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(50)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE ADAPTIVE=1
	
	SMART_PARK
	
	M109 S{EXTRUDER_TEMP}
	
	M190 S{BED_TEMP}
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-10 F300
	
	G1 Z10 F3000
	G90
	
	M84

[output_pin BEEPER_pin]
pin = PC6
pwm = True
value = 0
shutdown_value = 0
cycle_time = 0.001

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Presmartpark_State
	
	G90
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}
	
	RESTORE_GCODE_STATE NAME=Presmartpark_State

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 10
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = 0
position_max = 235
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10

[extruder]
max_extrude_only_distance = 100.0
max_extrude_cross_section = 5
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 34.406
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
control = pid
pid_kp = 21.527
pid_ki = 1.063
pid_kd = 108.982
min_temp = 0
max_temp = 250

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 54.027
pid_ki = 0.770
pid_kd = 948.182
min_temp = 0
max_temp = 130

[bed_mesh]
mesh_min = 20, 20
mesh_max = 190, 215
probe_count = 10, 10
algorithm = bicubic

[safe_z_home]
home_xy_position = 162.5, 121.5
z_hop = 5

[gcode_arcs]
resolution = 0.2

[input_shaper]
shaper_freq_x = 40
shaper_freq_y = 40
shaper_type = mzv

[screws_tilt_adjust]
screw1 = 76.7, 35.7
screw1_name = Front_Left
screw2 = 235, 35.7
screw2_name = Front_Right
screw3 = 76.7, 207.3
screw3_name = Back_left
screw4 = 235, 207.3
screw4_name = Back_Right
screw_thread = CW-M3

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 150
max_accel = 1500
max_z_velocity = 2.5
max_z_accel = 50

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
x_offset = -45
y_offset = -4
z_offset = 1.275

[display]
lcd_type = st7920
cs_pin = PB12
sclk_pin = PB13
sid_pin = PB15
encoder_pins = ^PB14, ^PB10
click_pin = ^!PB2

[bed_mesh default]
version = 1
points = 
	-0.060000, -0.077500, -0.082500, -0.057500, -0.040000, -0.037500, -0.050000, 0.002500, 0.017500, 0.050000
	-0.110000, -0.122500, -0.100000, -0.070000, -0.032500, -0.035000, -0.027500, 0.030000, 0.060000, 0.092500
	-0.077500, -0.090000, -0.077500, -0.035000, -0.002500, 0.007500, 0.005000, 0.065000, 0.100000, 0.132500
	-0.060000, -0.060000, -0.055000, -0.022500, -0.005000, -0.007500, -0.010000, 0.035000, 0.075000, 0.117500
	-0.100000, -0.110000, -0.087500, -0.055000, -0.022500, -0.017500, 0.002500, 0.067500, 0.122500, 0.130000
	-0.102500, -0.102500, -0.085000, -0.057500, -0.022500, -0.015000, 0.005000, 0.070000, 0.107500, 0.157500
	-0.035000, -0.067500, -0.060000, -0.035000, -0.010000, -0.017500, 0.002500, 0.072500, 0.127500, 0.122500
	0.000000, -0.037500, -0.050000, -0.035000, -0.020000, -0.045000, -0.040000, 0.015000, 0.055000, 0.072500
	0.005000, -0.025000, -0.057500, -0.040000, -0.027500, -0.025000, -0.012500, 0.057500, 0.125000, 0.125000
	0.052500, 0.012500, -0.022500, -0.035000, -0.020000, -0.032500, -0.045000, 0.017500, 0.050000, 0.085000
x_count = 10
y_count = 10
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 20.0
max_x = 189.92
min_y = 20.0
max_y = 214.93999999999997
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0'
webhooks client 140563073037776: New connection
webhooks client 140563073037776: Client info {'program': 'Moonraker', 'version': 'v0.9.3-1-g4e00a07'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0: [Errno 2] No such file or directory: '/dev/serial/by-path/pci-0000:00:1a.0-usb-0:1.1:1.0-port0'
Loaded MCU 'mcu' 112 commands (v0.12.0-179-g434770ea / gcc: (15:9-2019-q4-0ubuntu1) 9.2.1 20191025 (release) [ARM/arm-9-branch revision 277599] binutils: (2.34-4ubuntu1+13ubuntu1) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (65.0, 24.0)    | (20.0, 20.0)
  1   | (83.9, 24.0)    | (38.9, 20.0)
  2   | (102.8, 24.0)   | (57.8, 20.0)
  3   | (121.6, 24.0)   | (76.6, 20.0)
  4   | (140.5, 24.0)   | (95.5, 20.0)
  5   | (159.4, 24.0)   | (114.4, 20.0)
  6   | (178.3, 24.0)   | (133.3, 20.0)
  7   | (197.2, 24.0)   | (152.2, 20.0)
  8   | (216.0, 24.0)   | (171.0, 20.0)
  9   | (234.9, 24.0)   | (189.9, 20.0)
  10  | (234.9, 45.7)   | (189.9, 41.7)
  11  | (216.0, 45.7)   | (171.0, 41.7)
  12  | (197.2, 45.7)   | (152.2, 41.7)
  13  | (178.3, 45.7)   | (133.3, 41.7)
  14  | (159.4, 45.7)   | (114.4, 41.7)
  15  | (140.5, 45.7)   | (95.5, 41.7)
  16  | (121.6, 45.7)   | (76.6, 41.7)
  17  | (102.8, 45.7)   | (57.8, 41.7)
  18  | (83.9, 45.7)    | (38.9, 41.7)
  19  | (65.0, 45.7)    | (20.0, 41.7)
  20  | (65.0, 67.3)    | (20.0, 63.3)
  21  | (83.9, 67.3)    | (38.9, 63.3)
  22  | (102.8, 67.3)   | (57.8, 63.3)
  23  | (121.6, 67.3)   | (76.6, 63.3)
  24  | (140.5, 67.3)   | (95.5, 63.3)
  25  | (159.4, 67.3)   | (114.4, 63.3)
  26  | (178.3, 67.3)   | (133.3, 63.3)
  27  | (197.2, 67.3)   | (152.2, 63.3)
  28  | (216.0, 67.3)   | (171.0, 63.3)
  29  | (234.9, 67.3)   | (189.9, 63.3)
  30  | (234.9, 89.0)   | (189.9, 85.0)
  31  | (216.0, 89.0)   | (171.0, 85.0)
  32  | (197.2, 89.0)   | (152.2, 85.0)
  33  | (178.3, 89.0)   | (133.3, 85.0)
  34  | (159.4, 89.0)   | (114.4, 85.0)
  35  | (140.5, 89.0)   | (95.5, 85.0)
  36  | (121.6, 89.0)   | (76.6, 85.0)
  37  | (102.8, 89.0)   | (57.8, 85.0)
  38  | (83.9, 89.0)    | (38.9, 85.0)
  39  | (65.0, 89.0)    | (20.0, 85.0)
  40  | (65.0, 110.6)   | (20.0, 106.6)
  41  | (83.9, 110.6)   | (38.9, 106.6)
  42  | (102.8, 110.6)  | (57.8, 106.6)
  43  | (121.6, 110.6)  | (76.6, 106.6)
  44  | (140.5, 110.6)  | (95.5, 106.6)
  45  | (159.4, 110.6)  | (114.4, 106.6)
  46  | (178.3, 110.6)  | (133.3, 106.6)
  47  | (197.2, 110.6)  | (152.2, 106.6)
  48  | (216.0, 110.6)  | (171.0, 106.6)
  49  | (234.9, 110.6)  | (189.9, 106.6)
  50  | (234.9, 132.3)  | (189.9, 128.3)
  51  | (216.0, 132.3)  | (171.0, 128.3)
  52  | (197.2, 132.3)  | (152.2, 128.3)
  53  | (178.3, 132.3)  | (133.3, 128.3)
  54  | (159.4, 132.3)  | (114.4, 128.3)
  55  | (140.5, 132.3)  | (95.5, 128.3)
  56  | (121.6, 132.3)  | (76.6, 128.3)
  57  | (102.8, 132.3)  | (57.8, 128.3)
  58  | (83.9, 132.3)   | (38.9, 128.3)
  59  | (65.0, 132.3)   | (20.0, 128.3)
  60  | (65.0, 154.0)   | (20.0, 150.0)
  61  | (83.9, 154.0)   | (38.9, 150.0)
  62  | (102.8, 154.0)  | (57.8, 150.0)
  63  | (121.6, 154.0)  | (76.6, 150.0)
  64  | (140.5, 154.0)  | (95.5, 150.0)
  65  | (159.4, 154.0)  | (114.4, 150.0)
  66  | (178.3, 154.0)  | (133.3, 150.0)
  67  | (197.2, 154.0)  | (152.2, 150.0)
  68  | (216.0, 154.0)  | (171.0, 150.0)
  69  | (234.9, 154.0)  | (189.9, 150.0)
  70  | (234.9, 175.6)  | (189.9, 171.6)
  71  | (216.0, 175.6)  | (171.0, 171.6)
  72  | (197.2, 175.6)  | (152.2, 171.6)
  73  | (178.3, 175.6)  | (133.3, 171.6)
  74  | (159.4, 175.6)  | (114.4, 171.6)
  75  | (140.5, 175.6)  | (95.5, 171.6)
  76  | (121.6, 175.6)  | (76.6, 171.6)
  77  | (102.8, 175.6)  | (57.8, 171.6)
  78  | (83.9, 175.6)   | (38.9, 171.6)
  79  | (65.0, 175.6)   | (20.0, 171.6)
  80  | (65.0, 197.3)   | (20.0, 193.3)
  81  | (83.9, 197.3)   | (38.9, 193.3)
  82  | (102.8, 197.3)  | (57.8, 193.3)
  83  | (121.6, 197.3)  | (76.6, 193.3)
  84  | (140.5, 197.3)  | (95.5, 193.3)
  85  | (159.4, 197.3)  | (114.4, 193.3)
  86  | (178.3, 197.3)  | (133.3, 193.3)
  87  | (197.2, 197.3)  | (152.2, 193.3)
  88  | (216.0, 197.3)  | (171.0, 193.3)
  89  | (234.9, 197.3)  | (189.9, 193.3)
  90  | (234.9, 218.9)  | (189.9, 214.9)
  91  | (216.0, 218.9)  | (171.0, 214.9)
  92  | (197.2, 218.9)  | (152.2, 214.9)
  93  | (178.3, 218.9)  | (133.3, 214.9)
  94  | (159.4, 218.9)  | (114.4, 214.9)
  95  | (140.5, 218.9)  | (95.5, 214.9)
  96  | (121.6, 218.9)  | (76.6, 214.9)
  97  | (102.8, 218.9)  | (57.8, 214.9)
  98  | (83.9, 218.9)   | (38.9, 214.9)
  99  | (65.0, 218.9)   | (20.0, 214.9)
Starting heater checks for extruder
Stats 10765.1: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=1372 bytes_read=4366 bytes_retransmit=0 bytes_invalid=0 send_seq=130 receive_seq=127 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=19 upcoming_bytes=2390 freq=72003609  heater_bed: target=0 temp=0.0 pwm=0.000 sysload=2.73 cputime=8.584 memavail=3262120 print_time=115.247 buffer_time=0.247 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 140563073037776
webhooks: registering remote method 'reboot_machine' for connection id: 140563073037776
webhooks: registering remote method 'pause_job_queue' for connection id: 140563073037776
webhooks: registering remote method 'start_job_queue' for connection id: 140563073037776
Stats 10766.1: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000031 mcu_task_stddev=0.000049 bytes_write=4064 bytes_read=4767 bytes_retransmit=0 bytes_invalid=0 send_seq=182 receive_seq=182 retransmit_seq=0 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72001703  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.73 cputime=8.606 memavail=3252724 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10767.1: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000031 mcu_task_stddev=0.000049 bytes_write=4070 bytes_read=4903 bytes_retransmit=0 bytes_invalid=0 send_seq=183 receive_seq=183 retransmit_seq=0 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72001072  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.73 cputime=8.621 memavail=3248220 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10768.1: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000031 mcu_task_stddev=0.000049 bytes_write=4076 bytes_read=5009 bytes_retransmit=0 bytes_invalid=0 send_seq=184 receive_seq=184 retransmit_seq=0 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000759  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.73 cputime=8.629 memavail=3251124 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10769.1: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000031 mcu_task_stddev=0.000049 bytes_write=4082 bytes_read=5108 bytes_retransmit=0 bytes_invalid=0 send_seq=185 receive_seq=185 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000684  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.51 cputime=8.637 memavail=3250784 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10770.1: gcodein=0  mcu: mcu_awake=0.066 mcu_task_avg=0.000361 mcu_task_stddev=0.000553 bytes_write=4088 bytes_read=5251 bytes_retransmit=0 bytes_invalid=0 send_seq=186 receive_seq=186 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000644  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.51 cputime=8.647 memavail=3242172 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10771.1: gcodein=0  mcu: mcu_awake=0.066 mcu_task_avg=0.000361 mcu_task_stddev=0.000553 bytes_write=4094 bytes_read=5350 bytes_retransmit=0 bytes_invalid=0 send_seq=187 receive_seq=187 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000732  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.51 cputime=8.657 memavail=3255760 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10772.1: gcodein=0  mcu: mcu_awake=0.066 mcu_task_avg=0.000361 mcu_task_stddev=0.000553 bytes_write=4100 bytes_read=5449 bytes_retransmit=0 bytes_invalid=0 send_seq=188 receive_seq=188 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000712  heater_bed: target=0 temp=20.4 pwm=0.000 sysload=2.51 cputime=8.666 memavail=3272320 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10773.1: gcodein=0  mcu: mcu_awake=0.066 mcu_task_avg=0.000361 mcu_task_stddev=0.000553 bytes_write=4106 bytes_read=5585 bytes_retransmit=0 bytes_invalid=0 send_seq=189 receive_seq=189 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000705  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.51 cputime=8.676 memavail=3273412 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10774.1: gcodein=0  mcu: mcu_awake=0.066 mcu_task_avg=0.000361 mcu_task_stddev=0.000553 bytes_write=4112 bytes_read=5691 bytes_retransmit=0 bytes_invalid=0 send_seq=190 receive_seq=190 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000701  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.71 cputime=8.685 memavail=3254904 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10775.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4118 bytes_read=5810 bytes_retransmit=0 bytes_invalid=0 send_seq=191 receive_seq=191 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000700  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.71 cputime=8.692 memavail=3270676 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10776.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4124 bytes_read=5946 bytes_retransmit=0 bytes_invalid=0 send_seq=192 receive_seq=192 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000696  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.71 cputime=8.702 memavail=3283444 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10777.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4130 bytes_read=6052 bytes_retransmit=0 bytes_invalid=0 send_seq=193 receive_seq=193 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000690  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.71 cputime=8.709 memavail=3275396 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10778.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4136 bytes_read=6158 bytes_retransmit=0 bytes_invalid=0 send_seq=194 receive_seq=194 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000690  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.71 cputime=8.718 memavail=3286412 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10779.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4142 bytes_read=6294 bytes_retransmit=0 bytes_invalid=0 send_seq=195 receive_seq=195 retransmit_seq=0 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000686  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.81 cputime=8.726 memavail=3286812 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10780.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000016 mcu_task_stddev=0.000007 bytes_write=4148 bytes_read=6400 bytes_retransmit=0 bytes_invalid=0 send_seq=196 receive_seq=196 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000678  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.81 cputime=8.734 memavail=3276480 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10781.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4154 bytes_read=6519 bytes_retransmit=0 bytes_invalid=0 send_seq=197 receive_seq=197 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000679  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.81 cputime=8.742 memavail=3273544 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10782.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4160 bytes_read=6655 bytes_retransmit=0 bytes_invalid=0 send_seq=198 receive_seq=198 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000686  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.81 cputime=8.750 memavail=3279504 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10783.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4166 bytes_read=6761 bytes_retransmit=0 bytes_invalid=0 send_seq=199 receive_seq=199 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000685  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.81 cputime=8.758 memavail=3283000 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
Stats 10784.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4172 bytes_read=6867 bytes_retransmit=0 bytes_invalid=0 send_seq=200 receive_seq=200 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000684  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.99 cputime=8.766 memavail=3281212 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10785.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4178 bytes_read=7003 bytes_retransmit=0 bytes_invalid=0 send_seq=201 receive_seq=201 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000687  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.99 cputime=8.775 memavail=3272528 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.3 pwm=0.000
Stats 10786.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000017 mcu_task_stddev=0.000008 bytes_write=4184 bytes_read=7122 bytes_retransmit=0 bytes_invalid=0 send_seq=202 receive_seq=202 retransmit_seq=0 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000686  heater_bed: target=0 temp=20.3 pwm=0.000 sysload=2.99 cputime=8.783 memavail=3264588 print_time=115.247 buffer_time=0.000 print_stall=0 extruder: target=0 temp=20.4 pwm=0.000
